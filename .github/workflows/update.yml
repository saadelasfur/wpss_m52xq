name: Check for updates

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - 'master'

jobs:
  update:
    runs-on: ubuntu-24.04

    strategy:
      fail-fast: false
      matrix:
        include:
          - model: "SM-M526B"
            csc: "INS"
          - model: "SM-M526BR"
            csc: "BTU"
          - model: "SM-A528B"
            csc: "BTU"
          - model: "SM-A528N"
            csc: "KOO"
          - model: "SM-A736B"
            csc: "INS"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Compare latest version with current version
        run: |
          need_update=0
          latest=`curl --retry 5 --retry-delay 5 http://fota-cloud-dn.ospserver.net/firmware/${{ matrix.csc }}/${{ matrix.model }}/version.xml | grep latest | sed 's/^[^>]*>//' | sed 's/<.*//' | cut -d'/' -f1 | sed -n 's/.*..[SU]\(.\).*/\1/p'`
          [[ $latest =~ [A-Z] ]] && latest=$(( $(printf "%d" "'$latest") - 55 ))
          current=`cat ${{ matrix.model }}/current` || need_update=1
          latest_rev=rev$latest
          [[ $latest_rev != $current ]] && need_update=1
          echo "latest_rev=rev$latest" >> $GITHUB_ENV
          echo "need_update=$need_update" >> $GITHUB_ENV

      - name: Set up Node.js
        if: env.need_update == 1
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Set up Python 3
        if: env.need_update == 1
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        if: env.need_update == 1
        run: |
          sudo apt update && sudo apt upgrade -y
          DEBIAN_FRONTEND=noninteractive sudo apt install -yq \
            linux-modules-extra-$(uname -r) \
            liblz4-tool android-sdk-libsparse-utils f2fs-tools p7zip-full
          sudo modprobe f2fs

      - name: Build samfirm
        if: env.need_update == 1
        run: |
          git clone https://github.com/DavidArsene/samfirm.js.git && cd samfirm.js
          npm install --silent
          npm run --silent build
          sudo cp --preserve=all "dist/index.js" "/usr/bin/samfirm" && sudo chmod +x /usr/bin/samfirm
          cd .. && rm -rf samfirm.js

      - name: Fetch firmware
        if: env.need_update == 1
        run: |
          if [[ "${{ matrix.model }}" == "SM-A528B" ]]; then
              imei="352599501234566"
          elif [[ "${{ matrix.model }}" == "SM-A528N" ]]; then
              imei="354049881234560"
          elif [[ "${{ matrix.model }}" == "SM-A736B" ]]; then
              imei="352828291234563"
          elif [[ "${{ matrix.model }}" == "SM-M526B" ]]; then
              imei="358205231234561"
          else
              imei="355568761234563"
          fi
          samfirm -m ${{ matrix.model }} -r ${{ matrix.csc }} -i $imei

      - name: Get path of files
        if: env.need_update == 1
        run: |
          echo "ap_tar=`find -name AP*`" >> $GITHUB_ENV
          echo "bl_tar=`find -name BL*`" >> $GITHUB_ENV
          echo "cp_tar=`find -name CP*`" >> $GITHUB_ENV
          echo "csc_tar=`find -name CSC*`" >> $GITHUB_ENV
          echo "home_csc_tar=`find -name HOME_CSC*`" >> $GITHUB_ENV

      - name: Cleanup space
        if: env.need_update == 1
        run: |
          sudo apt-get remove --purge -y "php*" "dotnet*" "mysql*" "nodejs*" "clang*" "google*"
          sudo apt-get autoremove -y
          sudo apt-get clean
          sudo rm -rf /usr/local
          for f in "${{ env.bl_tar }}" "${{ env.cp_tar }}" "${{ env.csc_tar }}" "${{ env.home_csc_tar }}"; do
              rm "$f"
          done

      - name: Add new WPSS blobs
        if: env.need_update == 1
        run: |
          tar xvf ${{ env.ap_tar }} super.img.lz4
          rm ${{ env.ap_tar }}
          lz4 -d super.img.lz4 super.img
          rm super.img.lz4
          simg2img super.img super_raw.img
          rm super.img
          mv super_raw.img super.img
          python3 .github/tools/bin/lpunpack.py -p vendor super.img .
          rm super.img
          mkdir vendor
          mkdir -p "${{ matrix.model }}/${{ env.latest_rev }}/firmware"
          sudo mount -o ro vendor.img vendor
          FILES="wpss.b00 wpss.b01 wpss.b02 wpss.b03 wpss.b04 wpss.b05 wpss.b06 wpss.b07 wpss.mdt"
          for file in $FILES; do
              cp -f -a --preserve=all "vendor/firmware/$file" "${{ matrix.model }}/${{ env.latest_rev }}/firmware/"
          done
          sudo umount vendor \
              && rm vendor.img \
              && rm -rf vendor

      - name: Commit the changes
        if: env.need_update == 1
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git pull origin ${{ github.ref }} --ff-only
          echo ${{ env.latest_rev }} > ${{ matrix.model }}/current
          git add ${{ matrix.model }}/*
          git commit -m "Add ${{ env.latest_rev }} support for ${{ matrix.model }}"

      - name: Push changes to repo
        if: env.need_update == 1
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.TOKEN }}
